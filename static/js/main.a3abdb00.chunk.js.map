{"version":3,"sources":["component/ShowData.js","App.js","index.js"],"names":["ShowData","props","className","name","map","item","language","description","id","App","useState","value","setValue","setName","show","setShow","dataFound","setDataFound","changeHandler","e","a","preventDefault","fetch","repo","json","data","status","length","console","log","htmlFor","type","placeholder","onChange","target","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAgCeA,MA5Bf,SAAkBC,GAChB,OACE,gCACE,2CACA,wBAAOC,UAAU,aAAjB,UACE,gCACE,+BACE,2CACA,0CACA,kDAGJ,gCACGD,EAAME,KAAKC,KAAI,SAACC,GACf,OACE,+BACE,6BAAKA,EAAKF,OACV,6BAAKE,EAAKC,WACV,6BAAKD,EAAKE,gBAHHF,EAAKG,gBCiDbC,MAhEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOP,EAAP,KAAaU,EAAb,KACA,EAAwBH,oBAAS,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAcMC,EAAa,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACpBD,EAAEE,iBADkB,kBAICC,MAAM,gCAAD,OAAiCX,EAAjC,WAJN,cAIZY,EAJY,gBAKCA,EAAKC,OALN,OAKZC,EALY,OAME,MAAhBF,EAAKG,QAAkC,IAAhBD,EAAKE,QAC9Bd,EAAQY,GACRV,GAAQ,GACRE,GAAa,KAEbF,GAAQ,GACRE,GAAa,IAZG,kDAelBW,QAAQC,IAAR,MAfkB,0DAAH,sDAmBnB,OACE,sBAAK3B,UAAU,MAAf,UACE,+CACA,sBAAKA,UAAU,SAAf,UACE,uBAAO4B,QAAQ,cAAf,oCACA,uBACE5B,UAAU,QACV6B,KAAK,OACL5B,KAAK,cACLK,GAAG,SACHwB,YAAY,2BACZrB,MAAOA,EACPsB,SA3Ca,SAACd,GACpBP,EAASO,EAAEe,OAAOvB,OACdA,GACFM,GAAa,MA2CX,uBACA,uBACA,wBAAQc,KAAK,SAASI,QAASjB,EAA/B,SACE,4CAGHJ,EAAO,cAAC,EAAD,CAAUX,KAAMA,IAAW,KAClCa,EAAY,KAAO,mEAAsCL,SC1DhEyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3abdb00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ShowData.css';\r\n\r\nfunction ShowData(props) {\r\n  return (\r\n    <div>\r\n      <h1>Show Data</h1>\r\n      <table className=\"main_table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Repo Name</th>\r\n            <th>Language</th>\r\n            <th>Description</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.name.map((item) => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <td>{item.name}</td>\r\n                <td>{item.language}</td>\r\n                <td>{item.description}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowData;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport ShowData from './component/ShowData';\n\nfunction App() {\n  const [value, setValue] = useState('');\n  const [name, setName] = useState([]);\n  const [show, setShow] = useState(false);\n  const [dataFound, setDataFound] = useState(true);\n\n  const valueHandler = (e) => {\n    setValue(e.target.value);\n    if (value) {\n      setDataFound(true);\n    }\n  };\n\n  // const keyHandler = (e) => {\n  //   console.log(e.target.value);\n  //   setDataFound(true);\n  // };\n\n  const changeHandler = async (e) => {\n    e.preventDefault();\n\n    try {\n      const repo = await fetch(`https://api.github.com/users/${value}/repos`);\n      const data = await repo.json();\n      if (repo.status === 200 && data.length !== 0) {\n        setName(data);\n        setShow(true);\n        setDataFound(true);\n      } else {\n        setShow(false);\n        setDataFound(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Github Search</h2>\n      <div className=\"search\">\n        <label htmlFor=\"github_user\">Enter github username:</label>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"github_user\"\n          id=\"github\"\n          placeholder=\"Enter Github Username...\"\n          value={value}\n          onChange={valueHandler}\n          // onKeyUp={keyHandler}\n        />\n        <br />\n        <br />\n        <button type=\"submit\" onClick={changeHandler}>\n          <b>Submit</b>\n        </button>\n      </div>\n      {show ? <ShowData name={name} /> : null}\n      {dataFound ? null : <h2>There is no such Github username {value}</h2>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}